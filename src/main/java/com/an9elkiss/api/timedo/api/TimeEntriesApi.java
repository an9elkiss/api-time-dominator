/**
 * NOTE: This class is auto generated by the swagger code generator program (1.0.12-1).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.an9elkiss.api.timedo.api;

import java.util.Date;
import java.util.Map;

import javax.validation.Valid;

import org.springframework.format.annotation.DateTimeFormat;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RequestParam;

import com.an9elkiss.api.timedo.command.TimeEntriesCmd;
import com.an9elkiss.commons.command.ApiResponseCmd;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;
import io.swagger.annotations.Authorization;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2018-04-28T09:59:07.066Z")

@Api(value = "time-entries", description = "the time-entries API")
public interface TimeEntriesApi {

    @ApiOperation(value = "Find time entries", nickname = "findTimeEntries", notes = "Find time entries", response = Integer.class, responseContainer = "Map", authorizations = {
        @Authorization(value = "api_key")
    }, tags={ "time-entry", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = Map.class, responseContainer = "Map") })
	ResponseEntity<ApiResponseCmd<TimeEntriesCmd>> findTimeEntries(
			@ApiParam(value = "Query param") @Valid @RequestParam(value = "dateFrom", required = false) @DateTimeFormat(pattern = "yyyy-MM-dd HH:mm:ss") Date dateFrom,
			@ApiParam(value = "Query param") @Valid @RequestParam(value = "dateTo", required = false) @DateTimeFormat(pattern = "yyyy-MM-dd HH:mm:ss") Date dateTo,
			@ApiParam(value = "Query param") @Valid @RequestParam(value = "typeId", required = false) Integer typeId);

	@ApiOperation(value = "Find daily time entries", nickname = "findDailyTimeEntries", notes = "Find daily time entries", response = Integer.class, responseContainer = "Map", authorizations = {
			@Authorization(value = "api_key") }, tags = { "time-entry", })
	@ApiResponses(value = {
			@ApiResponse(code = 200, message = "successful operation", response = Map.class, responseContainer = "Map") })
	ResponseEntity<ApiResponseCmd<TimeEntriesCmd>> findDailyTimeEntries(
			@ApiParam(value = "Query param") @Valid @RequestParam(value = "date", required = true) @DateTimeFormat(pattern = "yyyy-MM-dd HH:mm:ss") Date date);

}
